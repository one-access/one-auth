server:
  port: ${SERVER_PORT:8080}

# jdbc and jpa config
spring:
  datasource:
    url: ${MYSQL_DB_URL:jdbc:mysql://localhost:3306/test?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false}
    username: ${MYSQL_DB_USERNAME:root}
    password: ${MYSQL_DB_PASSWORD:root}

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        jdbc:
          time_zone: UTC

  # Mail Config
  mail:
    properties:
      mail:
        smtp:
          starttls:
            enable: 'true'
          timeout: '5000'
          auth: 'true'
          connectiontimeout: '5000'
          writetimeout: '5000'
    host: ${MAIL_HOST:smtp.gmail.com}
    username: ${MAIL_USERNAME:<<YOUR GMAIL>>}
    password: ${MAIL_PASSWORD:<<Generate-App-password-for-gmail>>} # Google Account, Search "App Passwords", generate password
    port: ${MAIL_PORT:'587'}

  # freemarker config - used for email templates
  freemarker:
    template-loader-path: classpath:/mail-templates
    suffix: .ftl

  # Spring security oauth2 config
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID:<<ClientID>>}
            clientSecret: ${GOOGLE_CLIENT_SECRET:<<ClientSecret>>}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope: email, profile

          facebook:
            clientId: ${FACEBOOK_CLIENT_ID:<<ClientID>>}
            clientSecret: ${FACEBOOK_CLIENT_SECRET:<<ClientSecret>>}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope: email, public_profile

          github:
            clientId: ${GITHUB_CLIENT_ID:<<ClientID>>}
            clientSecret: ${GITHUB_CLIENT_SECRET:<<ClientSecret>>}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope: user, user:email


# logging config
logging:
  level:
    root: INFO
    org:
      springframework:
        web: DEBUG
        security: DEBUG


# App Custom Properties
myapp:

  appName: spring security OAuth2 and JWT starter example
  officialCompanyName: XYZ-Company Inc.
  officialCompanyDomain: http://localhost:4200

  mail:
    defaultEmailAddress: example@gmail.com
    verificationCodeExpirationSeconds: 1800 # 30 minutes

  jwt:
    privateKeyPath: ${JWT_PRIVATE_KEY_PATH:classpath:keys/private.pem}
    publicKeyPath: ${JWT_PUBLIC_KEY_PATH:classpath:keys/public.pem}
    expirationMillis: ${JWT_EXPIRATION_MILLIS:3600000}
    shortLivedMillis: ${JWT_SHORT_LIVED_MILLIS:120000}

  cors:
    allowedOrigins: ${APP_ALLOWED_ORIGINS:http://localhost:8080,http://localhost:4200}

  oauth2:
    authorizedRedirectOrigins: ${OAUTH2_AUTHORIZED_REDIRECT_URIS:http://localhost:8080,http://localhost:4200}
    cookieExpireSeconds: ${OAUTH2_COOKIE_EXPIRE_SECONDS:120}

  defaults:
    defaultPageStart: ${DEFAULT_PAGE_START:0}
    defaultPageSize: ${DEFAULT_PAGE_SIZE:50}
