server:
  port: ${SERVER_PORT:8081}

# jdbc and jpa config
spring:
  datasource:
    url: jdbc:mysql://${MYSQL_URL:localhost}:${MYSQL_PORT:3306}/${MYSQL_ONEAUTH_DB_NAME:oneauth-db}?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false
    username: ${MYSQL_ONEAUTH_USERNAME:root}
    password: ${MYSQL_ONEAUTH_PASSWORD:root}

  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          time_zone: UTC

  # Mail Config. Migrate to seperate service.
  mail:
    properties:
      mail:
        smtp:
          starttls:
            enable: 'true'
          timeout: '5000'
          auth: 'true'
          connectiontimeout: '5000'
          writetimeout: '5000'
    host: ${MAIL_HOST:smtp.gmail.com}
    username: ${MAIL_USERNAME:<<YOUR GMAIL>>}
    password: ${MAIL_PASSWORD:<<Generate-App-password-for-gmail>>} # Google Account, Search "App Passwords", generate password
    port: ${MAIL_PORT:587}
  # freemarker config - used for email templates
  freemarker:
    template-loader-path: classpath:/mail-templates
    suffix: .ftl

  # Spring security oauth2 config
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_CLIENT_ID:<<ClientID>>}
            clientSecret: ${GOOGLE_CLIENT_SECRET:<<ClientSecret>>}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope: email, profile

          facebook:
            clientId: ${FACEBOOK_CLIENT_ID:<<ClientID>>}
            clientSecret: ${FACEBOOK_CLIENT_SECRET:<<ClientSecret>>}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope: email, public_profile

          github:
            clientId: ${GITHUB_CLIENT_ID:<<ClientID>>}
            clientSecret: ${GITHUB_CLIENT_SECRET:<<ClientSecret>>}
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope: user, user:email


# logging config
logging:
  level:
    root: INFO
    org:
      springframework:
        web: DEBUG
        security: DEBUG
management:
  endpoints:
    web:
      exposure:
        include: health
  health:
    mail:
      enabled: false
  endpoint:
    health:
      show-details: always

# App Custom Properties
myapp:

  appName: One Auth Security OAuth2 and JWT
  officialCompanyName: OneAccess
  officialCompanyDomain: http://localhost:4200

  jwt:
    privateKeyB64: ${JWT_PRIVATE_KEY_B64:}
    publicKeyB64: ${JWT_PUBLIC_KEY_B64:}
    expiration: ${JWT_EXPIRATION_DURATION:1d}

  cors:
    allowedOrigins: ${APP_ALLOWED_ORIGINS:http://localhost:8080,http://localhost:4200}

  oauth2:
    authorizedRedirectOrigins: ${OAUTH2_AUTHORIZED_REDIRECT_URIS:http://localhost:8080,http://localhost:4200}
    cookieExpireSeconds: ${OAUTH2_COOKIE_EXPIRE_SECONDS:120}

  mail:
    defaultEmailAddress: ${APP_EMAIL:example@gmail.com}
    verificationCodeExpirationSeconds: 10m

  defaults:
    defaultPageStart: ${DEFAULT_PAGE_START:0}
    defaultPageSize: ${DEFAULT_PAGE_SIZE:50}
